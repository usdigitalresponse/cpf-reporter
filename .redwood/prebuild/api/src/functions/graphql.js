import { createAuthDecoder } from '@redwoodjs/auth-dbauth-api';
import { createGraphQLHandler } from '@redwoodjs/graphql-server';
let directives = {};
import * as directives_requireAuth_requireAuth from "../directives/requireAuth/requireAuth";
directives.requireAuth_requireAuth = directives_requireAuth_requireAuth;
import * as directives_skipAuth_skipAuth from "../directives/skipAuth/skipAuth";
directives.skipAuth_skipAuth = directives_skipAuth_skipAuth;
let sdls = {};
import * as sdls_agencies_sdl from "../graphql/agencies.sdl";
sdls.agencies_sdl = sdls_agencies_sdl;
let services = {};
import * as services_agencies_agencies from "../services/agencies/agencies";
services.agencies_agencies = services_agencies_agencies;
import { cookieName, getCurrentUser } from "../lib/auth";
import { db } from "../lib/db";
import { logger } from "../lib/logger";
const authDecoder = createAuthDecoder(cookieName);
export const handler = createGraphQLHandler({
  authDecoder,
  getCurrentUser,
  loggerConfig: {
    logger,
    options: {}
  },
  directives,
  sdls,
  services,
  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVBdXRoRGVjb2RlciIsImNyZWF0ZUdyYXBoUUxIYW5kbGVyIiwiZGlyZWN0aXZlcyIsImRpcmVjdGl2ZXNfcmVxdWlyZUF1dGhfcmVxdWlyZUF1dGgiLCJyZXF1aXJlQXV0aF9yZXF1aXJlQXV0aCIsImRpcmVjdGl2ZXNfc2tpcEF1dGhfc2tpcEF1dGgiLCJza2lwQXV0aF9za2lwQXV0aCIsInNkbHMiLCJzZGxzX2FnZW5jaWVzX3NkbCIsImFnZW5jaWVzX3NkbCIsInNlcnZpY2VzIiwic2VydmljZXNfYWdlbmNpZXNfYWdlbmNpZXMiLCJhZ2VuY2llc19hZ2VuY2llcyIsImNvb2tpZU5hbWUiLCJnZXRDdXJyZW50VXNlciIsImRiIiwibG9nZ2VyIiwiYXV0aERlY29kZXIiLCJoYW5kbGVyIiwibG9nZ2VyQ29uZmlnIiwib3B0aW9ucyIsIm9uRXhjZXB0aW9uIiwiJGRpc2Nvbm5lY3QiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9hcGkvc3JjL2Z1bmN0aW9ucy9ncmFwaHFsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUF1dGhEZWNvZGVyIH0gZnJvbSAnQHJlZHdvb2Rqcy9hdXRoLWRiYXV0aC1hcGknXG5pbXBvcnQgeyBjcmVhdGVHcmFwaFFMSGFuZGxlciB9IGZyb20gJ0ByZWR3b29kanMvZ3JhcGhxbC1zZXJ2ZXInXG5cbmltcG9ydCBkaXJlY3RpdmVzIGZyb20gJ3NyYy9kaXJlY3RpdmVzLyoqLyoue2pzLHRzfSdcbmltcG9ydCBzZGxzIGZyb20gJ3NyYy9ncmFwaHFsLyoqLyouc2RsLntqcyx0c30nXG5pbXBvcnQgc2VydmljZXMgZnJvbSAnc3JjL3NlcnZpY2VzLyoqLyoue2pzLHRzfSdcblxuaW1wb3J0IHsgY29va2llTmFtZSwgZ2V0Q3VycmVudFVzZXIgfSBmcm9tICdzcmMvbGliL2F1dGgnXG5pbXBvcnQgeyBkYiB9IGZyb20gJ3NyYy9saWIvZGInXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdzcmMvbGliL2xvZ2dlcidcblxuY29uc3QgYXV0aERlY29kZXIgPSBjcmVhdGVBdXRoRGVjb2Rlcihjb29raWVOYW1lKVxuXG5leHBvcnQgY29uc3QgaGFuZGxlciA9IGNyZWF0ZUdyYXBoUUxIYW5kbGVyKHtcbiAgYXV0aERlY29kZXIsXG4gIGdldEN1cnJlbnRVc2VyLFxuICBsb2dnZXJDb25maWc6IHsgbG9nZ2VyLCBvcHRpb25zOiB7fSB9LFxuICBkaXJlY3RpdmVzLFxuICBzZGxzLFxuICBzZXJ2aWNlcyxcbiAgb25FeGNlcHRpb246ICgpID0+IHtcbiAgICAvLyBEaXNjb25uZWN0IGZyb20geW91ciBkYXRhYmFzZSB3aXRoIGFuIHVuaGFuZGxlZCBleGNlcHRpb24uXG4gICAgZGIuJGRpc2Nvbm5lY3QoKVxuICB9LFxufSlcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsaUJBQWlCLFFBQVEsNEJBQTRCO0FBQzlELFNBQVNDLG9CQUFvQixRQUFRLDJCQUEyQjtBQUFBLElBQUFDLFVBQUE7QUFBQSxZQUFBQyxrQ0FBQTtBQUFBRCxVQUFBLENBQUFFLHVCQUFBLEdBQUFELGtDQUFBO0FBQUEsWUFBQUUsNEJBQUE7QUFBQUgsVUFBQSxDQUFBSSxpQkFBQSxHQUFBRCw0QkFBQTtBQUFBLElBQUFFLElBQUE7QUFBQSxZQUFBQyxpQkFBQTtBQUFBRCxJQUFBLENBQUFFLFlBQUEsR0FBQUQsaUJBQUE7QUFBQSxJQUFBRSxRQUFBO0FBQUEsWUFBQUMsMEJBQUE7QUFBQUQsUUFBQSxDQUFBRSxpQkFBQSxHQUFBRCwwQkFBQTtBQU1oRSxTQUFTRSxVQUFVLEVBQUVDLGNBQWM7QUFDbkMsU0FBU0MsRUFBRTtBQUNYLFNBQVNDLE1BQU07QUFFZixNQUFNQyxXQUFXLEdBQUdqQixpQkFBaUIsQ0FBQ2EsVUFBVSxDQUFDO0FBRWpELE9BQU8sTUFBTUssT0FBTyxHQUFHakIsb0JBQW9CLENBQUM7RUFDMUNnQixXQUFXO0VBQ1hILGNBQWM7RUFDZEssWUFBWSxFQUFFO0lBQUVILE1BQU07SUFBRUksT0FBTyxFQUFFLENBQUM7RUFBRSxDQUFDO0VBQ3JDbEIsVUFBVTtFQUNWSyxJQUFJO0VBQ0pHLFFBQVE7RUFDUlcsV0FBVyxFQUFFQSxDQUFBLEtBQU07SUFDakI7SUFDQU4sRUFBRSxDQUFDTyxXQUFXLENBQUMsQ0FBQztFQUNsQjtBQUNGLENBQUMsQ0FBQyJ9