name: QA Checks

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
    outputs:
      api-test-outcome:
        value: ${{ jobs.test-api.result }}
      api-test-coverage-markdown-report:
        value: ${{ jobs.test-api.outputs.coverage-markdown-report }}
      web-test-outcome:
        value: ${{ jobs.test-client.result }}
      web-test-coverage-markdown-report:
        value: ${{ jobs.test-client.outputs.coverage-markdown-report }}
      eslint-outcome:
        value: ${{ jobs.eslint.result }}
      tflint-outcome:
        value: ${{ jobs.tflint.result }}

permissions:
  contents: read

jobs:
  prepare-qa:
    name: Prepare for QA
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Setup Node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: 1

  test-api:
    name: Test api-side code
    runs-on: ubuntu-latest
    needs:
      - prepare-qa
    outputs:
      coverage-markdown-report: ${{ steps.coverage-markdown.outputs.markdownReport }}
    services:
      postgres:
        image: "postgres:15"
        env:
          POSTGRES_DB: cpf_reporter_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Setup Node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Install dependencies
        run: yarn install
        env:
          CI: 1
      - name: Prepare test execution environment
        run: |
          cat >> .env << ENDOFDOTENV
          DATABASE_SECRET_SOURCE=env
          TEST_DATABASE_URL=postgres://postgres:password@localhost:5432/cpf_reporter_test
          ENDOFDOTENV
      - name: Run unit tests with coverage
        run: yarn rw test api --no-watch --collect-coverage
        env:
          CI: 1
      - name: Generate coverage markdown report
        id: coverage-markdown
        uses: fingerprintjs/action-coverage-report-md@b7fcda0d2891d215c6808d32ca249e43f55abe3f # v1.0.6
        with:
          textReportPath: 'coverage/coverage.txt'
          srcBasePath: 'api/src'

  test-client:
    name: Test client-side code
    runs-on: ubuntu-latest
    needs:
      - prepare-qa
    outputs:
      coverage-markdown-report: ${{ steps.coverage-markdown.outputs.markdownReport }}
    steps:
      - uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Setup Node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Install dependencies
        run: yarn install
        env:
          CI: 1
      - name: Run unit tests with coverage
        run: yarn rw test web --no-watch --collect-coverage
        env:
          CI: 1
      - name: Generate coverage markdown report
        id: coverage-markdown
        uses: fingerprintjs/action-coverage-report-md@b7fcda0d2891d215c6808d32ca249e43f55abe3f # v1.0.6
        with:
          textReportPath: 'coverage/coverage.txt'
          srcBasePath: 'web/src'

  eslint:
    name: Lint JavaScript
    runs-on: ubuntu-latest
    needs:
      - prepare-qa
    steps:
      - uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Setup Node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Install dependencies
        run: yarn install
        env:
          CI: 1
      - name: Run linter for api side
        run: yarn eslint api/src
      - name: Run linter for web side
        if: ${{ !cancelled() }}
        run: yarn eslint web/src

  tflint:
    name: Lint terraform
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('terraform/.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        name: Setup TFLint
        with:
          tflint_version: latest
          tflint_wrapper: true
      - name: Show TFLint version
        run: tflint --version
      - name: Init TFLint
        run: tflint --init
        working-directory: terraform
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Run TFLint
        working-directory: terraform
        run: tflint --format compact --recursive --minimum-failure-severity=error
