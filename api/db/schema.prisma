generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["metrics", "tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agency {
  id             Int           @id @default(autoincrement())
  name           String
  abbreviation   String?
  code           String
  tenant         Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  users          User[]
}

model Organization {
  id       Int      @id @default(autoincrement())
  agencies Agency[]
  users    User[]
  name     String
}

model User {
  id             Int               @id @default(autoincrement())
  email          String
  name           String?
  agencyId       Int?
  organizationId Int
  roleId         Int?
  createdAt      DateTime          @default(now())
  updatedAt      DateTime
  agency         Agency?           @relation(fields: [agencyId], references: [id])
  organization   Organization      @relation(fields: [organizationId], references: [id])
  role           Role?             @relation(fields: [roleId], references: [id])
  certified      ReportingPeriod[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime
  users     User[]
}

model InputTemplate {
  id                 Int               @id @default(autoincrement())
  name               String
  version            String
  effectiveDate      DateTime          @db.Date
  rulesGeneratedAt   DateTime?         @db.Timestamptz(6)
  createdAt          DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime          @db.Timestamptz(6)
  reportingPeriods   ReportingPeriod[]
}

model OutputTemplate {
  id                 Int               @id @default(autoincrement())
  name               String
  version            String
  effectiveDate      DateTime          @db.Date
  rulesGeneratedAt   DateTime?         @db.Timestamptz(6)
  createdAt          DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime          @db.Timestamptz(6)
  reportingPeriods   ReportingPeriod[]
}

model ReportingPeriod {
  id               Int            @id @default(autoincrement())
  name             String
  startDate        DateTime       @db.Date
  endDate          DateTime       @db.Date
  certifiedAt      DateTime?      @db.Timestamptz(6)
  certifiedById    Int?
  certifiedBy      User?          @relation(fields: [certifiedById], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inputTemplateId  Int
  inputTemplate    InputTemplate  @relation(fields: [inputTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  outputTemplateId Int
  outputTemplate   OutputTemplate @relation(fields: [outputTemplateId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  isCurrentPeriod  Boolean        @default(false)
  createdAt        DateTime       @default(now()) @db.Timestamptz(6)
  updatedAt        DateTime       @db.Timestamptz(6)
}
